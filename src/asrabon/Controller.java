package asrabon;

import javafx.collections.FXCollections;
import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.input.MouseEvent;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.awt.*;
import java.io.*;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.*;

public class Controller {

    @FXML
    private Button searchButton;
    @FXML
    private ComboBox websiteDropdown;
    @FXML
    private ComboBox toolDropdown;
    @FXML
    private ListView appListView;
    @FXML
    private ListView versionList;
    @FXML
    private Label nameLabel;
    @FXML
    private Label authorLabel;
    @FXML
    private TextArea descriptionText;

    private Map<String, AndroidApp> appList = new HashMap<>();

    @FXML
    public void beginSearch() {
        Thread thread = new Thread(() -> {
           try {
               //get basic info from gui of what the user selected
               String toolToSearch = toolDropdown.getSelectionModel().getSelectedItem().toString();
               String websiteToSearch = websiteDropdown.getSelectionModel().getSelectedItem().toString();
               String toolFileName = "\"" + toolToSearch + ".txt\"";
               //run the python script in the command line with the given website and tool
               Process p = Runtime.getRuntime().exec("python " + websiteToSearch.split("\\.")[1] + ".py " + toolFileName);
               p.waitFor();
               try(PrintWriter writer = new PrintWriter(new FileWriter("python.log"))) {
                   try(InputStream stream = p.getErrorStream()) {
                       for (int i = 0; i < stream.available(); i++) {
                           writer.write(stream.read());
                       }
                   }
               }
               //USED FOR DEBUGGING
               System.out.println("Done with scraping!");
               String jsonData = "";
               try(BufferedReader in = Files.newBufferedReader(Paths.get("apps.json"))) {
                   String line;
                   while((line = in.readLine()) != null) {
                       jsonData += line + "\n";
                   }
               }
               //USED FOR DEBUGGING
               System.out.println("Done with reading json file!");
               JSONArray array = new JSONArray(jsonData);
               for(int i=0; i<array.length(); i++) {
                   JSONObject currentJsonApp = array.getJSONObject(i);
                   String name = currentJsonApp.getString("name");
                   String link = currentJsonApp.getString("link");
                   String author = currentJsonApp.getString("author");
                   String description = currentJsonApp.getString("description");
                   JSONObject appVersions = currentJsonApp.getJSONObject("appVersions");
                   Map<String, String> appVersionToLink = new HashMap<>();
                   Iterator versionIterator = appVersions.keys();
                   while(versionIterator.hasNext()) {
                       String appVersion = versionIterator.next().toString();
                       appVersionToLink.put(appVersion, appVersions.getString(appVersion));
                   }
                   appList.put(name, new AndroidApp(name, author, link, description, appVersionToLink));
               }
               //Populate the list view with all the android app names
               appListView.setItems(FXCollections.observableArrayList(appList.keySet()));
           } catch (IOException | JSONException | InterruptedException e) {
               try(PrintWriter writer = new PrintWriter(new FileWriter("error.log", true))) {
                   e.printStackTrace(writer);
               } catch (IOException e1) {
                   System.exit(1);
               }
           }
        });
        thread.start();
    }

    @FXML
    public void setItemInfo(MouseEvent event) {
        String appName = appListView.getSelectionModel().getSelectedItem().toString();
        AndroidApp app = appList.get(appName);
        nameLabel.setText("Name: " + app.getName());
        authorLabel.setText("Author: " + app.getAuthor());
        descriptionText.setText(app.getDescription());
        versionList.setItems(FXCollections.observableArrayList(app.getVersionToLink().keySet()));
    }

    @FXML
    public void downloadVersion(MouseEvent event) throws URISyntaxException, IOException {
        String appName = appListView.getSelectionModel().getSelectedItem().toString();
        AndroidApp app = appList.get(appName);
        String version = versionList.getSelectionModel().getSelectedItem().toString();
        Desktop.getDesktop().browse(new URI((app.getVersionToLink().get(version)).toString()));
    }

    @FXML
    public void openCurrentDirectory() throws IOException {
        Path currentRelativePath = Paths.get("keywords/");
        Desktop.getDesktop().open(currentRelativePath.toAbsolutePath().toFile());
    }

}
